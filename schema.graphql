type Item {
   id: Int!
   initialPrice: Float!
   quantity: Int!
   name: String!
   text: String
   images: [Image]
}

input ItemInput {
   id: Int
   initialPrice: Float
   quantity: Int
   name: String!
   text: String
   images: [ImageInput]
}

type Account {
   id: Int!
   username: String!
   email: String!
   createdDate: String!
   role: String!
}

type Image {
   order: Int!
   id: Int!
   url: String!
   base64data: String!
}
input ImageInput {
   order: Int
   id: Int
   url: String
   base64data: String!
}

type Auction {
   id: Int!
   createdDate: String!
   startDate: String!
   endDate: String!
   extendedTime: Float!
   startingPrice: Float!
   winner: Account
   items: [Item!]!
   bids: [Bid]
   closed: Boolean!
}

type Bid {
   id: Int!
   auction: Auction!
   bid: Float!
}

type Credentials {
   accessToken: Token!
   account: Account!
}

type Token {
   token: String!
   expiresInDays: Float!
}

type Query {
   allItems: [Item!]!
   getItem(id: Int!): Item
   allAuctions: [Auction!]
   login(email: String!, password: String!): Credentials
   validateUser(token: String!): Credentials
}

type Mutation {
   newItem(item: ItemInput!): Item
   signup(username: String!, password: String!, email: String!): Account
}
