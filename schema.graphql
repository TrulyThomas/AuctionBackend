type Item {
   id: Int!
   initialPrice: Float!
   quantity: Int!
   name: String!
   text: String
   images: [Image]
}

type Image {
   id: String
}

input ItemInput {
   id: Int
   initialPrice: Float
   quantity: Int
   name: String!
   text: String
   images: [String]
}

type Account {
   id: Int!
   userName: String!
   email: String!
   createdDate: String!
   credits: String!
}

type Auction {
   id: Int!
   createdDate: String!
   startDate: String!
   endDate: String!
   extendedTime: Float!
   startingPrice: Float!
   winner: Account
   items: [Item!]!
   bids: [Bid]
   closed: Boolean!
}

type Bid {
   id: Int!
   auction: Auction!
   bid: Float!
}

type Query {
   allItems: [Item!]!
   getItem(id: Int!): Item
   allAuctions: [Auction!]
}

type Mutation {
   newItem(item: ItemInput!): Item
}
